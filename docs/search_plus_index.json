{"./":{"url":"./","title":"はじめに","keywords":"","body":"はじめに 本プロジェクトについて 本プロジェクトは『Age of Z』のサーバー#434の日本人同盟、『(AZU)AZUMA』による知識の共有を目的として立ち上げ、管理、運用されています。 ライセンス Gitbookテンプレート 本プロジェクトはGitbookTemplateを基にしています。 Gitbook 本ドキュメントはGitbookを用いて生成しています。 本ドキュメントの更新にはGitbookが必要です。 Gitbookの利用にはNode.jsが必要です。 導入プラグイン -sharing https://www.npmjs.com/package/gitbook-plugin-sharing 各種SNSのシェアボタンを消します。 hide-published-with https://www.npmjs.com/package/gitbook-plugin-hide-published-with Gitbookへのpublishボタンを消します。 リポジトリなどは残っていないが、機能はする模様。 -lunr, -search https://www.npmjs.com/package/gitbook-plugin-lunr https://www.npmjs.com/package/gitbook-plugin-search Gitbookに標準搭載されている検索エンジンを無効化します。 search-pro-kui https://www.npmjs.com/package/gitbook-plugin-search-pro-kui あらゆるutf-8文字の検索に高度に対応した検索エンジンプラグイン。 これを導入しないと日本語の部分検索が一部うまくいかないことがある。 例えば「環境構築」での検索で引っかかる文書が「構築」では引っかからなかったりなど。 uml https://www.npmjs.com/package/gitbook-plugin-uml Gitbook用のplantUMLプラグイン。 expandable-chapters https://www.npmjs.com/package/gitbook-plugin-expandable-chapters サイドバーのメニューをCollapse/Expandできるツリービューにするプラグイン。 include-codeblock https://www.npmjs.com/package/gitbook-plugin-include-codeblock ファイルの内容を展開してくれるマクロを提供するプラグイン。 code-editor https://www.npmjs.com/package/gitbook-plugin-code-editor よくあるコードエディタとコードの実行結果が見られるアレ。 code https://www.npmjs.com/package/gitbook-plugin-code 複数行のコード記述に行数を表示してくれるプラグイン。 "},"src/General/Words.html":{"url":"src/General/Words.html","title":"用語集","keywords":"","body":"用語集 兵数 ユニット数と同義。 ユニット数 兵数とも呼ばれる。 兵士ユニット1体につき設定されている数値。 コストのようなもの。 兵士の種類によって設定されている数値が異なる。 例えば、狙撃兵は1体につきユニット数が1だが、決闘車は1体につきユニット数が10となっている。 各兵士ユニットごとのユニット数の詳細は兵士解説を参照。 負傷兵ユニット最大値 最大負傷兵数と同義。 ステータスの項目にはこの名称で記載されている。 最大負傷兵数 ステータスの項目では『負傷兵ユニット最大値』と記載されている。 病院に収まりきる負傷兵ユニット数の最大値のこと。 この数値を超える負傷兵が発生した場合、本来損失ではなかった兵士が治療を受けられない状態のため、損失してしまうようになる数値。 負傷兵 戦闘を経て負傷し、病院での治療を行わないと戦線復帰できない兵士。 損失(兵) 戦闘を経て死亡し、消滅してしまった兵士。 負傷兵転化率の確立で蘇生を行うことが可能。 "},"src/Battle/Soldiers.html":{"url":"src/Battle/Soldiers.html","title":"兵士解説","keywords":"","body":"兵士解説 このページについて 管轄者：如月 このページでは、兵士の特徴をまとめたものになります。 他の豆知識よりも戦争に直結する部分であり、重要度の高い内容になりますので、是非ご一読下さい。 ご質問及びご指摘は、AZU内の「Ｑ＆Ａコーナー」グループチャットにてご連絡下さい。 兵種系統一覧 近距離兵種 中距離兵種 長距離兵種 勇士系統 機関銃兵系統 スナイパー系統 戦車系統 ロケット砲兵系統 迫撃砲系統 決闘車系統 バトルバイク系統 シールドマシン系統 装甲兵系統 磁爆兵系統 電磁大砲系統 - 生物化学ゾンビ - 勇士系統 近距離ユニット 防衛戦のみ一時的な被ダメージ軽減 防衛戦や最終部隊として活躍する 戦車系統 近距離ユニット 被弾時に3割の確立で被ダメ半減 採集もできるが盾役は決闘車の方が優秀 決闘車系統 近距離ユニット 8秒毎に4秒間被ダメ34%軽減 最優先で募集だがユニット数が最大の10 装甲兵系統 近距離ユニット 被弾時20%の確立でダメージ35%を反射 他の近距離が強いので優先度は低い 機関銃兵系統 中距離ユニット 5回攻撃事に3秒間攻撃速度上昇 しかしほかの兵士が強いため微妙な戦力 ロケット砲兵系統 中距離ユニット 3回攻撃毎に後方に大ダメージ やはり遠距離の方が強い バトルバイク系統 中距離ユニット 戦闘開始後10秒間は攻撃速度上昇 移動速度も最速で、実はDPS換算で1位 磁爆兵系統 中距離ユニット 3回攻撃毎に後方優先の3ユニット攻撃 数少ない複数ユニットへの攻撃手段持ち 生物化学ゾンビ 中距離ユニット この兵種が持つスキルについてはゲームの進行によって有効化する必要があるため割愛 本来の出撃上限に加わらない追加部隊 損失しないイベントにはとにかく投入 スナイパー系統 遠距離ユニット 3回攻撃毎に1.8倍ダメージ とりあえず募集と編成しておけば強い 迫撃砲系統 長距離ユニット 3回攻撃毎に攻撃回数増加 スナイパーと同様に遠距離の主力兵種 シールドマシン系統 遠距離ユニット 4回攻撃毎に仲間ユニットにシールド付与 生きてさえいれば効果は発動する 電磁大砲系統 長距離ユニット 3回攻撃毎に3ユニット攻撃 複数ユニットへ攻撃ができる貴重な戦力 "},"src/Tactics/TATD.html":{"url":"src/Tactics/TATD.html","title":"TA・TD講座","keywords":"","body":"TA・TD講座(編纂中) このページについて 管轄者：如月 このゲームの基礎戦術であるTA(タイムアタック)及びTD(タイムディフェンス)の解説講座です TAの全体の流れ 各手順の詳しい解説、注意点 指揮役がターゲットを偵察 友好同盟やネーションルールによる保護下にないか確認 指揮役がターゲットの地点と偵察結果を同盟チャットに共有 座標に間違いがないように注意 ターゲットの駐留戦力にも注意 TA参加者各自はターゲットへの行軍時間を同盟チャットに共有 行軍時間を確認する際、実際に出撃させる部隊編成の行軍時間を確認すること。部隊編成によって行軍時間が変動するので注意。 行軍時間の確認方法は、ターゲットをタップして表れる『攻撃』ボタンを押し、右下の『実行』ボタンの真上に記載された時間で確認できる。 指揮役が行軍時間が最も長い人にスターターを依頼 指揮役は基本経験者が請け負うはずなので問題はないかと思いますが、指揮役は誰がスターターなのかをわかりやすくするためにも「＠〇〇：スターターお願いします」と、分かりやすい書き方にしてください。 スターターが「〇s」 と、何秒後に出発するのか同盟チャットに共有 この手順がスキップされてしまうと、スターターの出撃に気づけない参加者が出てくるので、スターターは必ず実行してください。 スターターと後続の行軍時間にあまり差がない場合、普段より長めの予備時間(10s等)を設けることをオススメします。 〇秒後、スターターがターゲットに向けて行軍開始 可能な限り、〇秒後のタイミングからズレないよう心がけましょう 参加メンバーは各自、スターターの残り進軍時間と自分の行軍時間が合うようにタイミングを計って行軍開始 基本的に、『同盟戦争』画面から現在の行軍一覧状態が確認できるので、行軍一覧より対象の行軍を押し、参加者各自それぞれの行軍時間が確認できる状態にしておきましょう。 全体(表題)の行軍時間はターゲットに着弾する最速の行軍時間となりますので、それを基準に行軍を開始してしまうと、スターターからズレた時間で出撃してしまうので、必ずスターターの残り行軍時間に合わせて出撃しましょう。 "},"src/StructEnvironments/Generally.html":{"url":"src/StructEnvironments/Generally.html","title":"共通の環境構築","keywords":"","body":"共通の環境構築 Node.jsのインストール Node.jsをインストールします。 本ドキュメント執筆時点でのバージョンは下記。 $ node --version v8.11.2 $ npm --version 5.6.0 "},"src/StructEnvironments/BuildDocument.html":{"url":"src/StructEnvironments/BuildDocument.html","title":"ドキュメント生成環境構築","keywords":"","body":"ドキュメント生成環境構築 前提条件 共通の環境構築が完了していることを前提とします。 bashが動作するCLIが導入されていることを前提とします。 クローン済みのリポジトリがローカルにあることを前提とします。 以降の操作はローカルリポジトリのルートディレクトリ上で行います。 プロビジョニングスクリプトの実行 プロビジョニングスクリプトを実行すると、自動的にドキュメント生成環境の構築が完了します。 何らかの理由により完了できなかった場合は後述の「手動で環境を構築する」セクションの手順を実行してください。 １．下記コマンドでプロビジョニングスクリプトを実行します。 $ bash provision.sh 手動で環境を構築する このセクションの手順は前述の「プロビジョニングスクリプトの実行」セクションの手順が成功しなかった場合にのみ行ってください。 nodeモジュールのインストール １．下記コマンドでnodeモジュールのインストールを行います。 $ npm install --save Gitbookの環境構築 １．Gitbookプラグインのインストールを行います。 $ ./node_modules/.bin/gitbook install ２．最後にビルドを実行して環境構築の完了を確認します。 $ ./node_modules/.bin/gitbook build ./ ./docs "}}